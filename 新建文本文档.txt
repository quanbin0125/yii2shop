1.加密
 $password=\Yii::$app->security->generatePasswordHash('123456');
2.验证密码
$password=\Yii::$app->security->validatePassword();

 
https://github.com/flyok666/yii2_study1229.git

return $this->refresh; 刷新本页 

 /*
     * 验证码
    
* 1.模型里面定义一个属性code,用来显示验证码
    
 * 2. 给验证码定义验证规则['code','captcha']
     
* 3. 表单里面显示验证码 $form->field($model,'code')->widget(\yii\captcha\Captcha::className());
    
 * 4. 验证码只能验证一次,不能重复验证. save方法需要关闭自动验证 save(false)
      
*/

/*
     * 分页
    
 * 1.计算 总条数
     
* 2. 设置每页显示多少条
    
 * 3.实例化分页工具类 指定总条数 每页多少条
    
 * 4. 设置limit参数,获取当页数据
     
* 5.视图使用 LinkPager  显示分页工具条
    
* echo \yii\widgets\LinkPager::widget(['pagination'=>$pager]);
     
*/



 /*
     * 文件上传
     
* 1. model中需要单独定义一个属性(img_file),用来保存上传文件对象
     
* 2. 表单中需要指定文件上传输入框,属性名使用定义的属性(img_file)
     
* 3. 给属性(img_file)设置验证规则
     
* 4. 在验证之前,实例化上传文件对象
     
* 5. 移动上传文件
    
 */

//关联品牌分类
    public function getBrand()
    {

        /**
         * hasOne参数 1. 关联对象的类名
         * 参数2 [key=>value] key 表示关联对象的主键  value 表示关联对象在当前对象的字段
         */
        return $this->hasOne(Brand::className(),['id'=>'brand_id']);
    }

    //定义分类
    public static function getBrandOptions()
    {
        //第一种找到分类id和分类name
        $brands = Brand::find()->asArray()->all();


        return  ArrayHelper::map($brands,'id','name');
    }


1.数据迁移
	yii migrate/create create_表名_table
	yii migrate
2.建立空的数据表
3.在GII中建立模型
4.在GII中建立控制器
5.写基础Add方法, 建立add视图   注意:radio类的
6.完善add方法   添加几条数据
7.完善index方法  完善index视图


二丶 用户  角色  权限
Yii 提供了两套授权管理器： yii\rbac\PhpManager 和 yii\rbac\DbManager。前者使用 PHP 脚本存放授权数据， 而后者使用数据库存放授权数据。
DbManager 使用4个数据库表存放它的数据：
 itemTable： 该表存放授权条目（译者注：即角色和权限）。默认表名为 "auth_item" 。
  itemChildTable： 该表存放授权条目的层次关系。默认表名为 "auth_item_child"。
  assignmentTable： 该表存放授权条目对用户的指派情况。默认表名为 "auth_assignment"。
   ruleTable： 该表存放规则。默认表名为 "auth_rule"。
继续之前，你需要在数据库中创建这些表。你可以使用存放在 @yii/rbac/migrations 目录中的数据库迁移文件来做这件事：yii migrate --migrationPath=@yii/rbac/migrations
现在可以通过 \Yii::$app->authManager 访问 authManager 。

创建权限   createPermission()
 $createPost = $auth->createPermission('createPost');
获取所有权限  getPermissions()
获取一个权限  getPermission()

创建角色   createRole()
    $author = $auth->createRole('author');
获取所有角色  getRoles()
获取一个角色  getRole()

给角色添加权限  addChild('角色','权限')
    $auth->addChild($admin, $updatePost);
给用户指派角色  assign('角色','ID')    IdentityInterface::getId() 返回的id 

自定义验证方法 public function validate+字段名($attribute,$params){}
$attribute->属性
$params->条件
1.首先在表单模型中定义一个方法,把方法名写在验证规则中
2.只处理错误的情况




App Key:
23746798
App Secret:
2c718f8d2b2b6d3ceb87360fdea8ce0



array_key_exists() 判断数组中是否有给定的键名



一丶 微信支付
1.准备工作
(1).注册一个微信支付的商户账号
(2).登录商户平台,获取参数
(3).下载微信开发 sdk (easywechat)(不建议官方文档) composer安装

2.开发流程
(1).生成订单
(2).调用下单API,获取交易链接code url
(3).











               


